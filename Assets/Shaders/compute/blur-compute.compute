#pragma kernel Blur
#pragma kernel ClearBorder

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float2> Read;
RWTexture2DArray<float> Result1;
RWTexture2DArray<float> Result2;
uint CurrentZ, CurrentDimensionMinus1;

[numthreads(8,8,1)]
void Blur (uint3 id : SV_DispatchThreadID)
{
    float2 col = float2(0, 0);
    [unroll] for (int x = -1; x <= 1; x++)
    {
        [unroll] for (int y = -1; y <= 1; y++)
        {
            uint2 index = id.xy;
            index.x += x;
            index.y += y;

            col += Read[index.xy];
        }
    }
    col /= 9;
    id.z = CurrentZ;
    Result1[id] = col.x;
    Result2[id] = col.y;
}

[numthreads(8, 1, 1)]
void ClearBorder (uint3 id : SV_DispatchThreadID)
{
    const float border1 = 1;
    const float border2 = 1;
    Result1[uint3(id.x, 0, CurrentZ)] = border1;
    Result2[uint3(id.x, 0, CurrentZ)] = border2;
    Result1[uint3(id.x, CurrentDimensionMinus1, CurrentZ)] = border1;
    Result2[uint3(id.x, CurrentDimensionMinus1, CurrentZ)] = border2;
    Result1[uint3(0, id.x, CurrentZ)] = border1;
    Result2[uint3(0, id.x, CurrentZ)] = border2;
    Result1[uint3(CurrentDimensionMinus1, id.x, CurrentZ)] = border1;
    Result2[uint3(CurrentDimensionMinus1, id.x, CurrentZ)] = border2;
}
